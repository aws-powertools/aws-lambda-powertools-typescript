name: Make Release
on:
  workflow_dispatch: {}
concurrency:
  group: on-release-publish
jobs:
  run-unit-tests:
    uses: ./.github/workflows/reusable-run-linting-check-and-unit-tests.yml
  publish-npm:
    needs: run-unit-tests
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.set-release-version.outputs.RELEASE_VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Here `token` is needed to avoid incurring in error GH006 Protected  Branch Update Failed,
          token: ${{ secrets.GH_PUBLISH_TOKEN }}
          # While `fetch-depth` is used to allow the workflow to later commit & push the changes.
          fetch-depth: 0
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - name: Setup npm
        run: |
          npm i -g npm@next-8
          npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
        with:
          path: "./node_modules"
          # Use the combo between node version, name, and SHA-256 hash of the lock file as cache key so that
          # if one of them changes the cache is invalidated/discarded
          key: 18-cache-utils-node-modules-${{ hashFiles('./package-lock.json') }}
      - name: Build packages
        run: |
          npm run build -w packages/commons
          npm run build -w packages/logger & npm run build -w packages/tracer & npm run build -w packages/metrics
      - name: "Version and publish"
        env:
          GH_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/$GITHUB_REPOSITORY
          npx lerna version --conventional-commits --force-publish --yes
          npx lerna publish from-git --no-verify-access --yes
      - name: Set release version
        id: set-release-version
        run: |
          RELEASE=$(npm view  @aws-lambda-powertools/tracer version)
          echo RELEASE_VERSION="$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

  # NOTE: Watch out for the depth limit of 4 nested workflow_calls.
  # publish_layer -> reusable_deploy_layer_stack -> reusable_update_layer_arn_docs
  publish_layer:
    needs: publish-npm
    secrets: inherit
    permissions:
      id-token: write
      contents: write
      pages: write
    uses: ./.github/workflows/publish_layer.yml
    with:
      latest_published_version: ${{ needs.publish-npm.outputs.RELEASE_VERSION }}
