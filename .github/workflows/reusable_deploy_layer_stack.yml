name: Deploy cdk stack

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string
      artifact-name:
        required: true
        type: string
    secrets:
      target-account-role:
        required: true

jobs:
  deploy-cdk-stack:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        region:
          [
            "af-south-1",
            "eu-central-1",
            "eu-central-2",
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "ap-east-1",
            "ap-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-southeast-3",
            "ap-southeast-4",
            "ca-central-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-south-1",
            "eu-south-2",
            "eu-north-1",
            "sa-east-1",
            "me-south-1",
          ]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: ${{ secrets.target-account-role }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: "./node_modules"
          # Use the combo between node version, name, and SHA-256 hash of the lock file as cache key so that
          # if one of them changes the cache is invalidated/discarded
          key: 18-cache-utilities-node-modules-${{ hashFiles('./package-lock.json') }}
      - name: Install dependencies
        # We can skip the installation if there was a cache hit
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        # See https://github.com/npm/cli/issues/4475 to see why --foreground-scripts
        run: npm ci --foreground-scripts
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: layers
      - name: Unzip artifact
        run: unzip cdk.out.zip
      - name: Deploy Layer
        run: npm run cdk -w layers -- deploy --app cdk.out --context region=${{ matrix.region }} 'LayerPublisherStack' --require-approval never --verbose
