name: release
on:
  push:
    branches:
      - chore/releaseFlow
  workflow_dispatch: {}
jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: "Use NodeJS 14"
      uses: actions/setup-node@v2
      with:
        node-version: '14'
  
    - name: Install packages
      run: |
        npm ci
        npm run lerna-ci

    - name: "Setup npm"
      run: |
        npm set @flochaz:registry=https://registry.npmjs.org/flochaz
        npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"

    - name: "Version and publish"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor}}@users.noreply.github.com"

        if [ ${{ github.base_ref }} = main ]; then
          npx lerna version --conventional-commits --create-release github --yes
        else
          npx lerna version --conventional-commits --conventional-prerelease --preid beta --create-release github --yes
        fi

        npx lerna publish from-git --no-verify-access --yes
  
  slack:
    name: Publish to slack channel
    needs: 
      - publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Setup npm"
        run: |
          npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
      - name: Install packages
        run: |
          curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/releases/latest > release.json
          VERSION=$( jq -r '.name' release.json )
          CONTENT=$( jq -r '.body' release.json )
          jq -n --arg version "$VERSION" --arg content "$CONTENT" '{"release-version": $version, "release-content": $content}' > body.json
          curl --location --request POST $SLACK_WEBHOOK_URL \
          --header 'Content-Type: application/json' --data @body.json